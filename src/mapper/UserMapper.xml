<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.UserMapper">
    <!--自定义返回集-->
    <resultMap id="userMap" type="User">
        <id property="id" column="id" javaType="int"/>
        <result property="username" column="username" javaType="String"/>
        <result property="password" column="password" javaType="String"/>
        <result property="sex" column="sex" javaType="String"/>
        <result property="address" column="address" javaType="String"/>
    </resultMap>
    <!--定义SQL语句,其中id需要和接口中的方法名相同-->
    <!--useGeneratedKeys自动生成主键-->
    <!--keyProperty唯一标记一个属性-->
    <!--parameterType指定查询时使用的参数类型,resultType指明查询返回的结果集类型-->
    <insert id="insertUser" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user (username, password, sex, address) VALUES
        (#{username},#{password},#{sex},#{address})
    </insert>
    <update id="updateUser" parameterType="User">
        UPDATE user SET address = #{adress} WHERE id = #{id};
    </update>
    <delete id="deleteUser" parameterType="int">
        DELETE FROM user WHERE id = #{id};
    </delete>
    <!--如未给JavaBean起类别名,resultMap="model.User"-->
    <!--使用resultType时,一定要保证,你属性名和字段名相同,如果不相同就使用resultMap-->
    <select id="selectUserById" parameterType="int" resultType="User">
        SELECT * FROM user WHERE id = #{id};
    </select>
    <select id="selectAllUser" resultMap="userMap">
        SELECT * FROM user;
    </select>
</mapper>